TickersQueryParam:
  name: tickers
  in: query
  description: A comma separated list of tickers to get snapshots for.
  schema:
    type: array
    items:
      type: string
GeneralTickerPathParam:
  name: ticker
  in: path
  description: The ticker symbol of the asset.
  required: true
  schema:
    type: string
  example: AAPL
StocksTickerPathParam:
  name: stocksTicker
  in: path
  description: The ticker symbol of the stock/equity.
  required: true
  schema:
    type: string
  example: AAPL
ForexTickerPathParam:
  name: forexTicker
  in: path
  description: The ticker symbol of the currency pair.
  required: true
  schema:
    type: string
  example: C:EURUSD
CryptoTickerPathParam:
  name: cryptoTicker
  in: path
  description: The ticker symbol of the currency pair.
  required: true
  schema:
    type: string
  example: X:BTCUSD
AggregateMultiplier:
  name: multiplier
  in: path
  description: The size of the timespan multiplier.
  required: true
  schema:
    type: integer
  example: 1
AggregateTimespan:
  name: timespan
  in: path
  description: The size of the time window.
  required: true
  schema:
    type: string
    enum: [ minute, hour, day, week, month, quarter, year ]
  example: day
AggregateTimeFrom:
  name: from
  in: path
  description: The start of the aggregate time window.
  required: true
  schema:
    type: string
  example: "2020-10-14"
AggregateTimeTo:
  name: to
  in: path
  description: The end of the aggregate time window.
  required: true
  schema:
    type: string
  example: "2020-10-14"
AggregateUnadjusted:
  name: unadjusted
  in: query
  description: |
    Whether or not the results are adjusted for splits.  By default, results are adjusted.
    Set this to true to get results that are NOT adjusted for splits.
  required: false
  schema:
    type: boolean
  example: true
AggregateSort:
  name: sort
  schema:
    enum:
      - asc
      - desc
  in: query
  description: |
    Sort the results by timestamp.
    `asc` will return results in ascending order (oldest at the top),
    `desc` will return results in descending order (newest at the top).
  example: asc
AggregateDate:
  name: date
  in: path
  description: The beginning date for the aggregate window.
  required: true
  schema:
    type: string
  example: "2020-10-14"
ReverseOrder:
  name: reverse
  in: query
  description: |
    Reverse the order of the results.
  required: false
  schema:
    type: boolean
  example: true
SnapshotDirection:
  name: direction
  in: path
  description: |
    The direction of the snapshot results to return.
  required: true
  schema:
    type: string
    enum: [ "gainers", "losers" ]
  example: gainers
LimitMax50000:
  name: limit
  in: query
  description: Limit the size of the response, max 50000 and default 5000.
  required: false
  schema:
    type: integer
  example: 10
AggregateLimitMax50000:
  name: limit
  in: query
  description: |
    Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.
    Read more about how limit is used to calculate aggregate results in our article on 
    <a href="https://polygon.io/blog/aggs-api-updates/" target="_blank" alt="Aggregate Data API Improvements">Aggregate Data API Improvements</a>.
  required: false
  schema:
    type: integer
  example: 120
LimitMax10000:
  name: limit
  in: query
  description: Limit the size of the response, max 10000.
  required: false
  schema:
    type: integer
  example: 100
LimitNoMax:
  name: limit
  in: query
  description: |
    Limit the number of results.
  required: false
  schema:
    type: integer
  example: 5
